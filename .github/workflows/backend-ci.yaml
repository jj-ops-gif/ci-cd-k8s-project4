name: Backend Continuous Integration
on:
  workflow_dispatch: 
  pull_request:
    types: [opened]
    branches:
      - main

jobs:
  test:
    name: Run test
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.6' 
      
      - name: Install dependencies
        run: |
          sudo pip install pipenv
          pip install pytest
          pip install flask
          pip install -U flask-cors

      - name: Run test
        run: |
          pipenv run test
          # FAIL_TEST=true pipenv run test  # Test fail

  lint:
    name: Run lint
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.6' 
      
      - name: Install dependencies
        run: |
          sudo pip install pipenv
          python3 -m pip install flake8

      - name: Run lint
        run: |
          pipenv run lint
          # pipenv run lint-fail  # Test Lint fail

  build:
    name: Run build
    needs: [lint]
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run application
        run: |
          docker build --tag mp-backend:latest .    # Build the image
          docker run -p 5000:5000 --name mp-backend -d mp-backend   # Run the image
          curl http://localhost:5000/movies

