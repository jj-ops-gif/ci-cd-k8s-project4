name: backend countinuous integration
on:
  workflow_dispatch: 
  push:
    branches: [ "feature_test" ]
  pull_request:
    types:
      - opened 
    branches:
      - main
    paths:
      - starter/frontend/**

jobs:
  run_lint:
    name: Run lint
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend
    # strategy:
    #   matrix:
    #     linter: [flake8]

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      
      - name: flake8 Lint
        uses: py-actions/flake8@v2

      # - name: Install the pylint
      #   run: |
      #     pip install pylint
      #     export PATH=$HOME/.local/bin:$PATH

      # - name: Run lint
      #   run: pylint .

      # - name: Install the dependencies
      #   run: python3 -mpip install flake8-bugbear

      # - name: Run lint
      #   uses: advanced-security/python-lint-code-scanning-action@v1.1.1
      #   with:
      #     linter: ${{ matrix.linter }}

  # run_test:
  #   name: Run test
  #   runs-on: ubuntu-latest   # Use the latest Ubuntu runner
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: ./starter/backend

  #   steps:
  #     # Check out the code to the runner
  #     - name: Checkout
  #       uses: actions/checkout@v4
      
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4.0.2
  #       with:
  #         node-version: latest
        
  #     - name: Install the dependencies
  #       run: npm ci

  #     - name: Run test
  #       run: npm test

  # build:
  #   name: Run build
  #   needs: [run_lint, run_test]
  #   runs-on: ubuntu-latest   # Use the latest Ubuntu runner
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: ./starter/backend

  #   steps:
  #     # Check out the code to the runner
  #     - name: Checkout
  #       uses: actions/checkout@v4
      
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4.0.2
  #       with:
  #         node-version: latest
        
  #     - name: Install the dependencies
  #       run: npm ci

  #     - name: Run build
  #       run: npm run build --if-present