name: backend countinuous integration
on:
  workflow_dispatch: 
  push:
    branches: [ "feature_test" ]
  pull_request:
    types:
      - opened 
    branches:
      - main
    paths:
      - starter/frontend/**

jobs:
  run_lint:
    name: Run lint
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      
      - name: Install dependencies
        run: |
          sudo pip install pipenv
          python3 -m pip install flake8
          which flake8

      - name: Run lint
        run: |
          pipenv run lint
          # pipenv run lint-fail  # Test Lint fail

      # - name: flake8 Lint - good
      #   uses: py-actions/flake8@v2
      #   with:
      #     ignore: "E501"
      #     max-line-length: "100"

  run_test:
    name: Run test
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      
      - name: Install dependencies
        run: |
          sudo pip install pipenv
          pip install pytest
          pip install flask
          pip install -U flask-cors
          # which pytest

      - name: Run test
        run: |
          # pipenv run test
          FAIL_TEST=true pipenv run test  # Test fail
        # run: python -m unittest discover

  build:
    name: Run build
    needs: [run_lint, run_test]
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      
      # - name: Install dependencies
      #   run: pipenv install

      # - name: Run test
      #   run: pipenv run serve